// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace FluFlix.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20210813113031_Episode_Order")]
    partial class Episode_Order
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Models.CategorySeries", b =>
                {
                    b.Property<int>("SeriesID")
                        .HasColumnType("int");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.HasKey("SeriesID", "CategoryID");

                    b.HasIndex("CategoryID");

                    b.ToTable("CategorySeries");
                });

            modelBuilder.Entity("Models.Episode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Resource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SeasonID")
                        .HasColumnType("int");

                    b.Property<string>("StreamLink")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SeasonID");

                    b.ToTable("Episode");
                });

            modelBuilder.Entity("Models.Season", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("SeriesID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SeriesID");

                    b.ToTable("Season");
                });

            modelBuilder.Entity("Models.Series", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("About")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("posterURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Series");
                });

            modelBuilder.Entity("Models.CategorySeries", b =>
                {
                    b.HasOne("Models.Category", "Category")
                        .WithMany("Serieses")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Series", "Series")
                        .WithMany("Categories")
                        .HasForeignKey("SeriesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Series");
                });

            modelBuilder.Entity("Models.Episode", b =>
                {
                    b.HasOne("Models.Season", "Season")
                        .WithMany("Episodes")
                        .HasForeignKey("SeasonID")
                        .HasConstraintName("FK_Episode_Season")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Season");
                });

            modelBuilder.Entity("Models.Season", b =>
                {
                    b.HasOne("Models.Series", "Series")
                        .WithMany("Seasons")
                        .HasForeignKey("SeriesID")
                        .HasConstraintName("FK_Season_Series")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Series");
                });

            modelBuilder.Entity("Models.Category", b =>
                {
                    b.Navigation("Serieses");
                });

            modelBuilder.Entity("Models.Season", b =>
                {
                    b.Navigation("Episodes");
                });

            modelBuilder.Entity("Models.Series", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Seasons");
                });
#pragma warning restore 612, 618
        }
    }
}
